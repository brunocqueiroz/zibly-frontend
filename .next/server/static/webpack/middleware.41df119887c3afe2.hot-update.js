"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./auth.ts":
/*!*****************!*\
  !*** ./auth.ts ***!
  \*****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   handlers: () => (/* binding */ handlers),\n/* harmony export */   signIn: () => (/* binding */ signIn),\n/* harmony export */   signOut: () => (/* binding */ signOut)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"(middleware)/./node_modules/.pnpm/next-auth@5.0.0-beta.28_next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0__react@19.1.0/node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(middleware)/./node_modules/.pnpm/next-auth@5.0.0-beta.28_next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0__react@19.1.0/node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/providers/google */ \"(middleware)/./node_modules/.pnpm/next-auth@5.0.0-beta.28_next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0__react@19.1.0/node_modules/next-auth/providers/google.js\");\n/* harmony import */ var next_auth_providers_microsoft_entra_id__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-auth/providers/microsoft-entra-id */ \"(middleware)/./node_modules/.pnpm/next-auth@5.0.0-beta.28_next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0__react@19.1.0/node_modules/next-auth/providers/microsoft-entra-id.js\");\n/* harmony import */ var next_auth_providers_apple__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next-auth/providers/apple */ \"(middleware)/./node_modules/.pnpm/next-auth@5.0.0-beta.28_next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0__react@19.1.0/node_modules/next-auth/providers/apple.js\");\n\n\n\n\n\nconst config = {\n    providers: [\n        (0,next_auth_providers_google__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            clientId: process.env.GOOGLE_CLIENT_ID,\n            clientSecret: process.env.GOOGLE_CLIENT_SECRET\n        }),\n        (0,next_auth_providers_microsoft_entra_id__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n            clientId: process.env.MICROSOFT_CLIENT_ID,\n            clientSecret: process.env.MICROSOFT_CLIENT_SECRET,\n            tenantId: process.env.MICROSOFT_TENANT_ID\n        }),\n        (0,next_auth_providers_apple__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({\n            clientId: process.env.APPLE_CLIENT_ID,\n            clientSecret: process.env.APPLE_CLIENT_SECRET\n        }),\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n            name: \"credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    return null;\n                }\n                try {\n                    // Call your Python backend\n                    const response = await fetch(`${process.env.BACKEND_URL || 'http://localhost:8000'}/auth/login`, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({\n                            email: credentials.email,\n                            password: credentials.password\n                        })\n                    });\n                    if (!response.ok) {\n                        return null;\n                    }\n                    const data = await response.json();\n                    // Return user object that will be stored in JWT\n                    return {\n                        id: data.user.id,\n                        email: data.user.email,\n                        name: data.user.name,\n                        role: data.user.role,\n                        company: data.user.company,\n                        // Store backend tokens for later use\n                        accessToken: data.tokens.access_token,\n                        refreshToken: data.tokens.refresh_token\n                    };\n                } catch (error) {\n                    console.error('Auth error:', error);\n                    return null;\n                }\n            }\n        })\n    ],\n    session: {\n        strategy: \"jwt\",\n        maxAge: 7 * 24 * 60 * 60\n    },\n    callbacks: {\n        async jwt ({ token, user, account }) {\n            // Initial sign in\n            if (account && user) {\n                return {\n                    ...token,\n                    accessToken: user.accessToken,\n                    refreshToken: user.refreshToken,\n                    role: user.role,\n                    company: user.company\n                };\n            }\n            // Return previous token if the access token has not expired yet\n            return token;\n        },\n        async session ({ session, token }) {\n            // Send properties to the client\n            return {\n                ...session,\n                user: {\n                    ...session.user,\n                    id: token.sub,\n                    role: token.role,\n                    company: token.company\n                },\n                accessToken: token.accessToken\n            };\n        }\n    },\n    pages: {\n        signIn: '/login'\n    },\n    debug: \"development\" === 'development'\n};\nconst { handlers, auth, signIn, signOut } = (0,next_auth__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(config);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./auth.ts\n");

/***/ }),

/***/ "(middleware)/./node_modules/.pnpm/@auth+core@0.39.1/node_modules/@auth/core/providers/apple.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/@auth+core@0.39.1/node_modules/@auth/core/providers/apple.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Apple)\n/* harmony export */ });\n/* harmony import */ var _lib_symbols_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/symbols.js */ \"(middleware)/./node_modules/.pnpm/@auth+core@0.39.1/node_modules/@auth/core/lib/symbols.js\");\n/**\n * <div class=\"provider\" style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\n * <span style={{fontSize: \"1.35rem\" }}>\n *  Built-in sign in with <b>Apple</b> integration.\n * </span>\n * <a href=\"https://apple.com\" style={{backgroundColor: \"black\", padding: \"12px\", borderRadius: \"100%\" }}>\n *   <img style={{display: \"block\"}} src=\"https://authjs.dev/img/providers/apple.svg\" width=\"24\"/>\n * </a>\n * </div>\n *\n * @module providers/apple\n */\n\n/**\n * ### Setup\n *\n * #### Callback URL\n * ```\n * https://example.com/auth/callback/apple\n * ```\n *\n * #### Configuration\n * ```ts\n * import Apple from \"@auth/core/providers/apple\"\n * ...\n * providers: [\n *   Apple({\n *     clientId: env.AUTH_APPLE_ID,\n *     clientSecret: env.AUTH_APPLE_SECRET,\n *   })\n * ]\n * ...\n * ```\n *\n * ### Resources\n *\n * - Sign in with Apple [Overview](https://developer.apple.com/sign-in-with-apple/get-started/)\n * - Sign in with Apple [REST API](https://developer.apple.com/documentation/sign_in_with_apple/sign_in_with_apple_rest_api)\n * - [How to retrieve](https://developer.apple.com/documentation/sign_in_with_apple/sign_in_with_apple_rest_api/authenticating_users_with_sign_in_with_apple#3383773) the user's information from Apple ID servers\n * - [Learn more about OAuth](https://authjs.dev/concepts/oauth)\n * - [Creating the Client Secret](https://developer.apple.com/documentation/accountorganizationaldatasharing/creating-a-client-secret)\n *\n * ### Notes\n *\n * - Apple does not support localhost/http URLs. You can only use a live URL with HTTPS.\n * - Apple requires the client secret to be a JWT. We provide a CLI command `npx auth add apple`, to help you generate one.\n *   This will prompt you for the necessary information and at the end it will add the `AUTH_APPLE_ID` and `AUTH_APPLE_SECRET` to your `.env` file.\n * - Apple provides minimal user information. It returns the user's email and name, but only the first time the user consents to the app.\n * - The Apple provider does not support setting up the same client for multiple deployments (like [preview deployments](https://authjs.dev/getting-started/deployment#securing-a-preview-deployment)).\n * - The Apple provider comes with a [default configuration](https://github.com/nextauthjs/next-auth/blob/main/packages/core/src/providers/apple.ts). To override the defaults for your use case, check out [customizing a built-in OAuth provider](https://authjs.dev/guides/configuring-oauth-providers).\n *\n * ## Help\n *\n * If you think you found a bug in the default configuration, you can [open an issue](https://authjs.dev/new/provider-issue).\n *\n * Auth.js strictly adheres to the specification and it cannot take responsibility for any deviation from\n * the spec by the provider. You can open an issue, but if the problem is non-compliance with the spec,\n * we might not pursue a resolution. You can ask for more help in [Discussions](https://authjs.dev/new/github-discussions).\n */\nfunction Apple(config) {\n    return {\n        id: \"apple\",\n        name: \"Apple\",\n        type: \"oidc\",\n        issuer: \"https://appleid.apple.com\",\n        authorization: {\n            params: {\n                scope: \"name email\", // https://developer.apple.com/documentation/sign_in_with_apple/clientconfigi/3230955-scope\n                response_mode: \"form_post\",\n            },\n        },\n        // We need to parse the special `user` parameter the first time the user consents to the app.\n        // It adds the `name` object to the `profile`, with `firstName` and `lastName` fields.\n        [_lib_symbols_js__WEBPACK_IMPORTED_MODULE_0__.conformInternal]: true,\n        profile(profile) {\n            const name = profile.user\n                ? `${profile.user.name.firstName} ${profile.user.name.lastName}`\n                : profile.email;\n            return {\n                id: profile.sub,\n                name: name,\n                email: profile.email,\n                image: null,\n            };\n        },\n        // Apple does not provide a userinfo endpoint.\n        async [_lib_symbols_js__WEBPACK_IMPORTED_MODULE_0__.customFetch](...args) {\n            const url = new URL(args[0] instanceof Request ? args[0].url : args[0]);\n            if (url.pathname.endsWith(\".well-known/openid-configuration\")) {\n                const response = await fetch(...args);\n                const json = await response.clone().json();\n                return Response.json({\n                    ...json,\n                    userinfo_endpoint: \"https://appleid.apple.com/fake_endpoint\",\n                });\n            }\n            return fetch(...args);\n        },\n        client: { token_endpoint_auth_method: \"client_secret_post\" },\n        style: { text: \"#fff\", bg: \"#000\" },\n        checks: [\"nonce\", \"state\"],\n        options: config,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BhdXRoK2NvcmVAMC4zOS4xL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL3Byb3ZpZGVycy9hcHBsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsaUNBQWlDLHdFQUF3RTtBQUN6RyxpQkFBaUIsc0JBQXNCO0FBQ3ZDO0FBQ0E7QUFDQSx1Q0FBdUMsa0VBQWtFO0FBQ3pHLGtCQUFrQixtQkFBbUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNpRTtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTLDREQUFlO0FBQ3hCO0FBQ0E7QUFDQSxxQkFBcUIsNkJBQTZCLEVBQUUsMkJBQTJCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsZUFBZSx3REFBVztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsU0FBUztBQUNULGtCQUFrQixrREFBa0Q7QUFDcEUsaUJBQWlCLDBCQUEwQjtBQUMzQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2JydW5vL0RvY3VtZW50cy96aWJseS1mcm9udGVuZC9ub2RlX21vZHVsZXMvLnBucG0vQGF1dGgrY29yZUAwLjM5LjEvbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvcHJvdmlkZXJzL2FwcGxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogPGRpdiBjbGFzcz1cInByb3ZpZGVyXCIgc3R5bGU9e3tkaXNwbGF5OiBcImZsZXhcIiwganVzdGlmeUNvbnRlbnQ6IFwic3BhY2UtYmV0d2VlblwiLCBhbGlnbkl0ZW1zOiBcImNlbnRlclwifX0+XG4gKiA8c3BhbiBzdHlsZT17e2ZvbnRTaXplOiBcIjEuMzVyZW1cIiB9fT5cbiAqICBCdWlsdC1pbiBzaWduIGluIHdpdGggPGI+QXBwbGU8L2I+IGludGVncmF0aW9uLlxuICogPC9zcGFuPlxuICogPGEgaHJlZj1cImh0dHBzOi8vYXBwbGUuY29tXCIgc3R5bGU9e3tiYWNrZ3JvdW5kQ29sb3I6IFwiYmxhY2tcIiwgcGFkZGluZzogXCIxMnB4XCIsIGJvcmRlclJhZGl1czogXCIxMDAlXCIgfX0+XG4gKiAgIDxpbWcgc3R5bGU9e3tkaXNwbGF5OiBcImJsb2NrXCJ9fSBzcmM9XCJodHRwczovL2F1dGhqcy5kZXYvaW1nL3Byb3ZpZGVycy9hcHBsZS5zdmdcIiB3aWR0aD1cIjI0XCIvPlxuICogPC9hPlxuICogPC9kaXY+XG4gKlxuICogQG1vZHVsZSBwcm92aWRlcnMvYXBwbGVcbiAqL1xuaW1wb3J0IHsgY29uZm9ybUludGVybmFsLCBjdXN0b21GZXRjaCB9IGZyb20gXCIuLi9saWIvc3ltYm9scy5qc1wiO1xuLyoqXG4gKiAjIyMgU2V0dXBcbiAqXG4gKiAjIyMjIENhbGxiYWNrIFVSTFxuICogYGBgXG4gKiBodHRwczovL2V4YW1wbGUuY29tL2F1dGgvY2FsbGJhY2svYXBwbGVcbiAqIGBgYFxuICpcbiAqICMjIyMgQ29uZmlndXJhdGlvblxuICogYGBgdHNcbiAqIGltcG9ydCBBcHBsZSBmcm9tIFwiQGF1dGgvY29yZS9wcm92aWRlcnMvYXBwbGVcIlxuICogLi4uXG4gKiBwcm92aWRlcnM6IFtcbiAqICAgQXBwbGUoe1xuICogICAgIGNsaWVudElkOiBlbnYuQVVUSF9BUFBMRV9JRCxcbiAqICAgICBjbGllbnRTZWNyZXQ6IGVudi5BVVRIX0FQUExFX1NFQ1JFVCxcbiAqICAgfSlcbiAqIF1cbiAqIC4uLlxuICogYGBgXG4gKlxuICogIyMjIFJlc291cmNlc1xuICpcbiAqIC0gU2lnbiBpbiB3aXRoIEFwcGxlIFtPdmVydmlld10oaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL3NpZ24taW4td2l0aC1hcHBsZS9nZXQtc3RhcnRlZC8pXG4gKiAtIFNpZ24gaW4gd2l0aCBBcHBsZSBbUkVTVCBBUEldKGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS9kb2N1bWVudGF0aW9uL3NpZ25faW5fd2l0aF9hcHBsZS9zaWduX2luX3dpdGhfYXBwbGVfcmVzdF9hcGkpXG4gKiAtIFtIb3cgdG8gcmV0cmlldmVdKGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS9kb2N1bWVudGF0aW9uL3NpZ25faW5fd2l0aF9hcHBsZS9zaWduX2luX3dpdGhfYXBwbGVfcmVzdF9hcGkvYXV0aGVudGljYXRpbmdfdXNlcnNfd2l0aF9zaWduX2luX3dpdGhfYXBwbGUjMzM4Mzc3MykgdGhlIHVzZXIncyBpbmZvcm1hdGlvbiBmcm9tIEFwcGxlIElEIHNlcnZlcnNcbiAqIC0gW0xlYXJuIG1vcmUgYWJvdXQgT0F1dGhdKGh0dHBzOi8vYXV0aGpzLmRldi9jb25jZXB0cy9vYXV0aClcbiAqIC0gW0NyZWF0aW5nIHRoZSBDbGllbnQgU2VjcmV0XShodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vZG9jdW1lbnRhdGlvbi9hY2NvdW50b3JnYW5pemF0aW9uYWxkYXRhc2hhcmluZy9jcmVhdGluZy1hLWNsaWVudC1zZWNyZXQpXG4gKlxuICogIyMjIE5vdGVzXG4gKlxuICogLSBBcHBsZSBkb2VzIG5vdCBzdXBwb3J0IGxvY2FsaG9zdC9odHRwIFVSTHMuIFlvdSBjYW4gb25seSB1c2UgYSBsaXZlIFVSTCB3aXRoIEhUVFBTLlxuICogLSBBcHBsZSByZXF1aXJlcyB0aGUgY2xpZW50IHNlY3JldCB0byBiZSBhIEpXVC4gV2UgcHJvdmlkZSBhIENMSSBjb21tYW5kIGBucHggYXV0aCBhZGQgYXBwbGVgLCB0byBoZWxwIHlvdSBnZW5lcmF0ZSBvbmUuXG4gKiAgIFRoaXMgd2lsbCBwcm9tcHQgeW91IGZvciB0aGUgbmVjZXNzYXJ5IGluZm9ybWF0aW9uIGFuZCBhdCB0aGUgZW5kIGl0IHdpbGwgYWRkIHRoZSBgQVVUSF9BUFBMRV9JRGAgYW5kIGBBVVRIX0FQUExFX1NFQ1JFVGAgdG8geW91ciBgLmVudmAgZmlsZS5cbiAqIC0gQXBwbGUgcHJvdmlkZXMgbWluaW1hbCB1c2VyIGluZm9ybWF0aW9uLiBJdCByZXR1cm5zIHRoZSB1c2VyJ3MgZW1haWwgYW5kIG5hbWUsIGJ1dCBvbmx5IHRoZSBmaXJzdCB0aW1lIHRoZSB1c2VyIGNvbnNlbnRzIHRvIHRoZSBhcHAuXG4gKiAtIFRoZSBBcHBsZSBwcm92aWRlciBkb2VzIG5vdCBzdXBwb3J0IHNldHRpbmcgdXAgdGhlIHNhbWUgY2xpZW50IGZvciBtdWx0aXBsZSBkZXBsb3ltZW50cyAobGlrZSBbcHJldmlldyBkZXBsb3ltZW50c10oaHR0cHM6Ly9hdXRoanMuZGV2L2dldHRpbmctc3RhcnRlZC9kZXBsb3ltZW50I3NlY3VyaW5nLWEtcHJldmlldy1kZXBsb3ltZW50KSkuXG4gKiAtIFRoZSBBcHBsZSBwcm92aWRlciBjb21lcyB3aXRoIGEgW2RlZmF1bHQgY29uZmlndXJhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL25leHRhdXRoanMvbmV4dC1hdXRoL2Jsb2IvbWFpbi9wYWNrYWdlcy9jb3JlL3NyYy9wcm92aWRlcnMvYXBwbGUudHMpLiBUbyBvdmVycmlkZSB0aGUgZGVmYXVsdHMgZm9yIHlvdXIgdXNlIGNhc2UsIGNoZWNrIG91dCBbY3VzdG9taXppbmcgYSBidWlsdC1pbiBPQXV0aCBwcm92aWRlcl0oaHR0cHM6Ly9hdXRoanMuZGV2L2d1aWRlcy9jb25maWd1cmluZy1vYXV0aC1wcm92aWRlcnMpLlxuICpcbiAqICMjIEhlbHBcbiAqXG4gKiBJZiB5b3UgdGhpbmsgeW91IGZvdW5kIGEgYnVnIGluIHRoZSBkZWZhdWx0IGNvbmZpZ3VyYXRpb24sIHlvdSBjYW4gW29wZW4gYW4gaXNzdWVdKGh0dHBzOi8vYXV0aGpzLmRldi9uZXcvcHJvdmlkZXItaXNzdWUpLlxuICpcbiAqIEF1dGguanMgc3RyaWN0bHkgYWRoZXJlcyB0byB0aGUgc3BlY2lmaWNhdGlvbiBhbmQgaXQgY2Fubm90IHRha2UgcmVzcG9uc2liaWxpdHkgZm9yIGFueSBkZXZpYXRpb24gZnJvbVxuICogdGhlIHNwZWMgYnkgdGhlIHByb3ZpZGVyLiBZb3UgY2FuIG9wZW4gYW4gaXNzdWUsIGJ1dCBpZiB0aGUgcHJvYmxlbSBpcyBub24tY29tcGxpYW5jZSB3aXRoIHRoZSBzcGVjLFxuICogd2UgbWlnaHQgbm90IHB1cnN1ZSBhIHJlc29sdXRpb24uIFlvdSBjYW4gYXNrIGZvciBtb3JlIGhlbHAgaW4gW0Rpc2N1c3Npb25zXShodHRwczovL2F1dGhqcy5kZXYvbmV3L2dpdGh1Yi1kaXNjdXNzaW9ucykuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFwcGxlKGNvbmZpZykge1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkOiBcImFwcGxlXCIsXG4gICAgICAgIG5hbWU6IFwiQXBwbGVcIixcbiAgICAgICAgdHlwZTogXCJvaWRjXCIsXG4gICAgICAgIGlzc3VlcjogXCJodHRwczovL2FwcGxlaWQuYXBwbGUuY29tXCIsXG4gICAgICAgIGF1dGhvcml6YXRpb246IHtcbiAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIHNjb3BlOiBcIm5hbWUgZW1haWxcIiwgLy8gaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2RvY3VtZW50YXRpb24vc2lnbl9pbl93aXRoX2FwcGxlL2NsaWVudGNvbmZpZ2kvMzIzMDk1NS1zY29wZVxuICAgICAgICAgICAgICAgIHJlc3BvbnNlX21vZGU6IFwiZm9ybV9wb3N0XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICAvLyBXZSBuZWVkIHRvIHBhcnNlIHRoZSBzcGVjaWFsIGB1c2VyYCBwYXJhbWV0ZXIgdGhlIGZpcnN0IHRpbWUgdGhlIHVzZXIgY29uc2VudHMgdG8gdGhlIGFwcC5cbiAgICAgICAgLy8gSXQgYWRkcyB0aGUgYG5hbWVgIG9iamVjdCB0byB0aGUgYHByb2ZpbGVgLCB3aXRoIGBmaXJzdE5hbWVgIGFuZCBgbGFzdE5hbWVgIGZpZWxkcy5cbiAgICAgICAgW2NvbmZvcm1JbnRlcm5hbF06IHRydWUsXG4gICAgICAgIHByb2ZpbGUocHJvZmlsZSkge1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IHByb2ZpbGUudXNlclxuICAgICAgICAgICAgICAgID8gYCR7cHJvZmlsZS51c2VyLm5hbWUuZmlyc3ROYW1lfSAke3Byb2ZpbGUudXNlci5uYW1lLmxhc3ROYW1lfWBcbiAgICAgICAgICAgICAgICA6IHByb2ZpbGUuZW1haWw7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGlkOiBwcm9maWxlLnN1YixcbiAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICAgIGVtYWlsOiBwcm9maWxlLmVtYWlsLFxuICAgICAgICAgICAgICAgIGltYWdlOiBudWxsLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgLy8gQXBwbGUgZG9lcyBub3QgcHJvdmlkZSBhIHVzZXJpbmZvIGVuZHBvaW50LlxuICAgICAgICBhc3luYyBbY3VzdG9tRmV0Y2hdKC4uLmFyZ3MpIHtcbiAgICAgICAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwoYXJnc1swXSBpbnN0YW5jZW9mIFJlcXVlc3QgPyBhcmdzWzBdLnVybCA6IGFyZ3NbMF0pO1xuICAgICAgICAgICAgaWYgKHVybC5wYXRobmFtZS5lbmRzV2l0aChcIi53ZWxsLWtub3duL29wZW5pZC1jb25maWd1cmF0aW9uXCIpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCguLi5hcmdzKTtcbiAgICAgICAgICAgICAgICBjb25zdCBqc29uID0gYXdhaXQgcmVzcG9uc2UuY2xvbmUoKS5qc29uKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFJlc3BvbnNlLmpzb24oe1xuICAgICAgICAgICAgICAgICAgICAuLi5qc29uLFxuICAgICAgICAgICAgICAgICAgICB1c2VyaW5mb19lbmRwb2ludDogXCJodHRwczovL2FwcGxlaWQuYXBwbGUuY29tL2Zha2VfZW5kcG9pbnRcIixcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmZXRjaCguLi5hcmdzKTtcbiAgICAgICAgfSxcbiAgICAgICAgY2xpZW50OiB7IHRva2VuX2VuZHBvaW50X2F1dGhfbWV0aG9kOiBcImNsaWVudF9zZWNyZXRfcG9zdFwiIH0sXG4gICAgICAgIHN0eWxlOiB7IHRleHQ6IFwiI2ZmZlwiLCBiZzogXCIjMDAwXCIgfSxcbiAgICAgICAgY2hlY2tzOiBbXCJub25jZVwiLCBcInN0YXRlXCJdLFxuICAgICAgICBvcHRpb25zOiBjb25maWcsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/.pnpm/@auth+core@0.39.1/node_modules/@auth/core/providers/apple.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/.pnpm/@auth+core@0.39.1/node_modules/@auth/core/providers/google.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/@auth+core@0.39.1/node_modules/@auth/core/providers/google.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Google)\n/* harmony export */ });\n/**\n * Add Google login to your page.\n *\n * ### Setup\n *\n * #### Callback URL\n * ```\n * https://example.com/api/auth/callback/google\n * ```\n *\n * #### Configuration\n *```ts\n * import { Auth } from \"@auth/core\"\n * import Google from \"@auth/core/providers/google\"\n *\n * const request = new Request(origin)\n * const response = await Auth(request, {\n *   providers: [\n *     Google({ clientId: GOOGLE_CLIENT_ID, clientSecret: GOOGLE_CLIENT_SECRET }),\n *   ],\n * })\n * ```\n *\n * ### Resources\n *\n *  - [Google OAuth documentation](https://developers.google.com/identity/protocols/oauth2)\n *  - [Google OAuth Configuration](https://console.developers.google.com/apis/credentials)\n *\n * ### Notes\n *\n * By default, Auth.js assumes that the Google provider is\n * based on the [Open ID Connect](https://openid.net/specs/openid-connect-core-1_0.html) specification.\n *\n *\n * The \"Authorized redirect URIs\" used when creating the credentials must include your full domain and end in the callback path. For example;\n *\n * - For production: `https://{YOUR_DOMAIN}/api/auth/callback/google`\n * - For development: `http://localhost:3000/api/auth/callback/google`\n *\n * :::warning\n * Google only provides Refresh Token to an application the first time a user signs in.\n *\n * To force Google to re-issue a Refresh Token, the user needs to remove the application from their account and sign in again:\n * https://myaccount.google.com/permissions\n *\n * Alternatively, you can also pass options in the `params` object of `authorization` which will force the Refresh Token to always be provided on sign in, however this will ask all users to confirm if they wish to grant your application access every time they sign in.\n *\n * If you need access to the RefreshToken or AccessToken for a Google account and you are not using a database to persist user accounts, this may be something you need to do.\n *\n * ```ts\n * const options = {\n *   providers: [\n *     Google({\n *       clientId: process.env.GOOGLE_ID,\n *       clientSecret: process.env.GOOGLE_SECRET,\n *       authorization: {\n *         params: {\n *           prompt: \"consent\",\n *           access_type: \"offline\",\n *           response_type: \"code\"\n *         }\n *       }\n *     })\n *   ],\n * }\n * ```\n *\n * :::\n *\n * :::tip\n * Google also returns a `email_verified` boolean property in the OAuth profile.\n *\n * You can use this property to restrict access to people with verified accounts at a particular domain.\n *\n * ```ts\n * const options = {\n *   ...\n *   callbacks: {\n *     async signIn({ account, profile }) {\n *       if (account.provider === \"google\") {\n *         return profile.email_verified && profile.email.endsWith(\"@example.com\")\n *       }\n *       return true // Do different verification for other providers that don't have `email_verified`\n *     },\n *   }\n *   ...\n * }\n * ```\n *\n * :::\n * :::tip\n *\n * The Google provider comes with a [default configuration](https://github.com/nextauthjs/next-auth/blob/main/packages/core/src/providers/google.ts).\n * To override the defaults for your use case, check out [customizing a built-in OAuth provider](https://authjs.dev/guides/configuring-oauth-providers).\n *\n * :::\n *\n * :::info **Disclaimer**\n *\n * If you think you found a bug in the default configuration, you can [open an issue](https://authjs.dev/new/provider-issue).\n *\n * Auth.js strictly adheres to the specification and it cannot take responsibility for any deviation from\n * the spec by the provider. You can open an issue, but if the problem is non-compliance with the spec,\n * we might not pursue a resolution. You can ask for more help in [Discussions](https://authjs.dev/new/github-discussions).\n *\n * :::\n */\nfunction Google(options) {\n    return {\n        id: \"google\",\n        name: \"Google\",\n        type: \"oidc\",\n        issuer: \"https://accounts.google.com\",\n        style: {\n            brandColor: \"#1a73e8\",\n        },\n        options,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BhdXRoK2NvcmVAMC4zOS4xL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL3Byb3ZpZGVycy9nb29nbGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdFQUFnRTtBQUNoRjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsWUFBWTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isa0JBQWtCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2JydW5vL0RvY3VtZW50cy96aWJseS1mcm9udGVuZC9ub2RlX21vZHVsZXMvLnBucG0vQGF1dGgrY29yZUAwLjM5LjEvbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvcHJvdmlkZXJzL2dvb2dsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFkZCBHb29nbGUgbG9naW4gdG8geW91ciBwYWdlLlxuICpcbiAqICMjIyBTZXR1cFxuICpcbiAqICMjIyMgQ2FsbGJhY2sgVVJMXG4gKiBgYGBcbiAqIGh0dHBzOi8vZXhhbXBsZS5jb20vYXBpL2F1dGgvY2FsbGJhY2svZ29vZ2xlXG4gKiBgYGBcbiAqXG4gKiAjIyMjIENvbmZpZ3VyYXRpb25cbiAqYGBgdHNcbiAqIGltcG9ydCB7IEF1dGggfSBmcm9tIFwiQGF1dGgvY29yZVwiXG4gKiBpbXBvcnQgR29vZ2xlIGZyb20gXCJAYXV0aC9jb3JlL3Byb3ZpZGVycy9nb29nbGVcIlxuICpcbiAqIGNvbnN0IHJlcXVlc3QgPSBuZXcgUmVxdWVzdChvcmlnaW4pXG4gKiBjb25zdCByZXNwb25zZSA9IGF3YWl0IEF1dGgocmVxdWVzdCwge1xuICogICBwcm92aWRlcnM6IFtcbiAqICAgICBHb29nbGUoeyBjbGllbnRJZDogR09PR0xFX0NMSUVOVF9JRCwgY2xpZW50U2VjcmV0OiBHT09HTEVfQ0xJRU5UX1NFQ1JFVCB9KSxcbiAqICAgXSxcbiAqIH0pXG4gKiBgYGBcbiAqXG4gKiAjIyMgUmVzb3VyY2VzXG4gKlxuICogIC0gW0dvb2dsZSBPQXV0aCBkb2N1bWVudGF0aW9uXShodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9pZGVudGl0eS9wcm90b2NvbHMvb2F1dGgyKVxuICogIC0gW0dvb2dsZSBPQXV0aCBDb25maWd1cmF0aW9uXShodHRwczovL2NvbnNvbGUuZGV2ZWxvcGVycy5nb29nbGUuY29tL2FwaXMvY3JlZGVudGlhbHMpXG4gKlxuICogIyMjIE5vdGVzXG4gKlxuICogQnkgZGVmYXVsdCwgQXV0aC5qcyBhc3N1bWVzIHRoYXQgdGhlIEdvb2dsZSBwcm92aWRlciBpc1xuICogYmFzZWQgb24gdGhlIFtPcGVuIElEIENvbm5lY3RdKGh0dHBzOi8vb3BlbmlkLm5ldC9zcGVjcy9vcGVuaWQtY29ubmVjdC1jb3JlLTFfMC5odG1sKSBzcGVjaWZpY2F0aW9uLlxuICpcbiAqXG4gKiBUaGUgXCJBdXRob3JpemVkIHJlZGlyZWN0IFVSSXNcIiB1c2VkIHdoZW4gY3JlYXRpbmcgdGhlIGNyZWRlbnRpYWxzIG11c3QgaW5jbHVkZSB5b3VyIGZ1bGwgZG9tYWluIGFuZCBlbmQgaW4gdGhlIGNhbGxiYWNrIHBhdGguIEZvciBleGFtcGxlO1xuICpcbiAqIC0gRm9yIHByb2R1Y3Rpb246IGBodHRwczovL3tZT1VSX0RPTUFJTn0vYXBpL2F1dGgvY2FsbGJhY2svZ29vZ2xlYFxuICogLSBGb3IgZGV2ZWxvcG1lbnQ6IGBodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL2F1dGgvY2FsbGJhY2svZ29vZ2xlYFxuICpcbiAqIDo6Ondhcm5pbmdcbiAqIEdvb2dsZSBvbmx5IHByb3ZpZGVzIFJlZnJlc2ggVG9rZW4gdG8gYW4gYXBwbGljYXRpb24gdGhlIGZpcnN0IHRpbWUgYSB1c2VyIHNpZ25zIGluLlxuICpcbiAqIFRvIGZvcmNlIEdvb2dsZSB0byByZS1pc3N1ZSBhIFJlZnJlc2ggVG9rZW4sIHRoZSB1c2VyIG5lZWRzIHRvIHJlbW92ZSB0aGUgYXBwbGljYXRpb24gZnJvbSB0aGVpciBhY2NvdW50IGFuZCBzaWduIGluIGFnYWluOlxuICogaHR0cHM6Ly9teWFjY291bnQuZ29vZ2xlLmNvbS9wZXJtaXNzaW9uc1xuICpcbiAqIEFsdGVybmF0aXZlbHksIHlvdSBjYW4gYWxzbyBwYXNzIG9wdGlvbnMgaW4gdGhlIGBwYXJhbXNgIG9iamVjdCBvZiBgYXV0aG9yaXphdGlvbmAgd2hpY2ggd2lsbCBmb3JjZSB0aGUgUmVmcmVzaCBUb2tlbiB0byBhbHdheXMgYmUgcHJvdmlkZWQgb24gc2lnbiBpbiwgaG93ZXZlciB0aGlzIHdpbGwgYXNrIGFsbCB1c2VycyB0byBjb25maXJtIGlmIHRoZXkgd2lzaCB0byBncmFudCB5b3VyIGFwcGxpY2F0aW9uIGFjY2VzcyBldmVyeSB0aW1lIHRoZXkgc2lnbiBpbi5cbiAqXG4gKiBJZiB5b3UgbmVlZCBhY2Nlc3MgdG8gdGhlIFJlZnJlc2hUb2tlbiBvciBBY2Nlc3NUb2tlbiBmb3IgYSBHb29nbGUgYWNjb3VudCBhbmQgeW91IGFyZSBub3QgdXNpbmcgYSBkYXRhYmFzZSB0byBwZXJzaXN0IHVzZXIgYWNjb3VudHMsIHRoaXMgbWF5IGJlIHNvbWV0aGluZyB5b3UgbmVlZCB0byBkby5cbiAqXG4gKiBgYGB0c1xuICogY29uc3Qgb3B0aW9ucyA9IHtcbiAqICAgcHJvdmlkZXJzOiBbXG4gKiAgICAgR29vZ2xlKHtcbiAqICAgICAgIGNsaWVudElkOiBwcm9jZXNzLmVudi5HT09HTEVfSUQsXG4gKiAgICAgICBjbGllbnRTZWNyZXQ6IHByb2Nlc3MuZW52LkdPT0dMRV9TRUNSRVQsXG4gKiAgICAgICBhdXRob3JpemF0aW9uOiB7XG4gKiAgICAgICAgIHBhcmFtczoge1xuICogICAgICAgICAgIHByb21wdDogXCJjb25zZW50XCIsXG4gKiAgICAgICAgICAgYWNjZXNzX3R5cGU6IFwib2ZmbGluZVwiLFxuICogICAgICAgICAgIHJlc3BvbnNlX3R5cGU6IFwiY29kZVwiXG4gKiAgICAgICAgIH1cbiAqICAgICAgIH1cbiAqICAgICB9KVxuICogICBdLFxuICogfVxuICogYGBgXG4gKlxuICogOjo6XG4gKlxuICogOjo6dGlwXG4gKiBHb29nbGUgYWxzbyByZXR1cm5zIGEgYGVtYWlsX3ZlcmlmaWVkYCBib29sZWFuIHByb3BlcnR5IGluIHRoZSBPQXV0aCBwcm9maWxlLlxuICpcbiAqIFlvdSBjYW4gdXNlIHRoaXMgcHJvcGVydHkgdG8gcmVzdHJpY3QgYWNjZXNzIHRvIHBlb3BsZSB3aXRoIHZlcmlmaWVkIGFjY291bnRzIGF0IGEgcGFydGljdWxhciBkb21haW4uXG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IG9wdGlvbnMgPSB7XG4gKiAgIC4uLlxuICogICBjYWxsYmFja3M6IHtcbiAqICAgICBhc3luYyBzaWduSW4oeyBhY2NvdW50LCBwcm9maWxlIH0pIHtcbiAqICAgICAgIGlmIChhY2NvdW50LnByb3ZpZGVyID09PSBcImdvb2dsZVwiKSB7XG4gKiAgICAgICAgIHJldHVybiBwcm9maWxlLmVtYWlsX3ZlcmlmaWVkICYmIHByb2ZpbGUuZW1haWwuZW5kc1dpdGgoXCJAZXhhbXBsZS5jb21cIilcbiAqICAgICAgIH1cbiAqICAgICAgIHJldHVybiB0cnVlIC8vIERvIGRpZmZlcmVudCB2ZXJpZmljYXRpb24gZm9yIG90aGVyIHByb3ZpZGVycyB0aGF0IGRvbid0IGhhdmUgYGVtYWlsX3ZlcmlmaWVkYFxuICogICAgIH0sXG4gKiAgIH1cbiAqICAgLi4uXG4gKiB9XG4gKiBgYGBcbiAqXG4gKiA6OjpcbiAqIDo6OnRpcFxuICpcbiAqIFRoZSBHb29nbGUgcHJvdmlkZXIgY29tZXMgd2l0aCBhIFtkZWZhdWx0IGNvbmZpZ3VyYXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9uZXh0YXV0aGpzL25leHQtYXV0aC9ibG9iL21haW4vcGFja2FnZXMvY29yZS9zcmMvcHJvdmlkZXJzL2dvb2dsZS50cykuXG4gKiBUbyBvdmVycmlkZSB0aGUgZGVmYXVsdHMgZm9yIHlvdXIgdXNlIGNhc2UsIGNoZWNrIG91dCBbY3VzdG9taXppbmcgYSBidWlsdC1pbiBPQXV0aCBwcm92aWRlcl0oaHR0cHM6Ly9hdXRoanMuZGV2L2d1aWRlcy9jb25maWd1cmluZy1vYXV0aC1wcm92aWRlcnMpLlxuICpcbiAqIDo6OlxuICpcbiAqIDo6OmluZm8gKipEaXNjbGFpbWVyKipcbiAqXG4gKiBJZiB5b3UgdGhpbmsgeW91IGZvdW5kIGEgYnVnIGluIHRoZSBkZWZhdWx0IGNvbmZpZ3VyYXRpb24sIHlvdSBjYW4gW29wZW4gYW4gaXNzdWVdKGh0dHBzOi8vYXV0aGpzLmRldi9uZXcvcHJvdmlkZXItaXNzdWUpLlxuICpcbiAqIEF1dGguanMgc3RyaWN0bHkgYWRoZXJlcyB0byB0aGUgc3BlY2lmaWNhdGlvbiBhbmQgaXQgY2Fubm90IHRha2UgcmVzcG9uc2liaWxpdHkgZm9yIGFueSBkZXZpYXRpb24gZnJvbVxuICogdGhlIHNwZWMgYnkgdGhlIHByb3ZpZGVyLiBZb3UgY2FuIG9wZW4gYW4gaXNzdWUsIGJ1dCBpZiB0aGUgcHJvYmxlbSBpcyBub24tY29tcGxpYW5jZSB3aXRoIHRoZSBzcGVjLFxuICogd2UgbWlnaHQgbm90IHB1cnN1ZSBhIHJlc29sdXRpb24uIFlvdSBjYW4gYXNrIGZvciBtb3JlIGhlbHAgaW4gW0Rpc2N1c3Npb25zXShodHRwczovL2F1dGhqcy5kZXYvbmV3L2dpdGh1Yi1kaXNjdXNzaW9ucykuXG4gKlxuICogOjo6XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEdvb2dsZShvcHRpb25zKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaWQ6IFwiZ29vZ2xlXCIsXG4gICAgICAgIG5hbWU6IFwiR29vZ2xlXCIsXG4gICAgICAgIHR5cGU6IFwib2lkY1wiLFxuICAgICAgICBpc3N1ZXI6IFwiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tXCIsXG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICBicmFuZENvbG9yOiBcIiMxYTczZThcIixcbiAgICAgICAgfSxcbiAgICAgICAgb3B0aW9ucyxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/.pnpm/@auth+core@0.39.1/node_modules/@auth/core/providers/google.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/.pnpm/@auth+core@0.39.1/node_modules/@auth/core/providers/microsoft-entra-id.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@auth+core@0.39.1/node_modules/@auth/core/providers/microsoft-entra-id.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MicrosoftEntraID)\n/* harmony export */ });\n/* harmony import */ var _lib_symbols_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/symbols.js */ \"(middleware)/./node_modules/.pnpm/@auth+core@0.39.1/node_modules/@auth/core/lib/symbols.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n/**\n * <div class=\"provider\" style={{backgroundColor: \"#0072c6\", display: \"flex\", justifyContent: \"space-between\", color: \"#fff\", padding: 16}}>\n * <span>Built-in <b>Microsoft Entra ID</b> integration.</span>\n * <a href=\"https://learn.microsoft.com/en-us/entra/identity\">\n *   <img style={{display: \"block\"}} src=\"https://authjs.dev/img/providers/microsoft-entra-id.svg\" height=\"48\" width=\"48\"/>\n * </a>\n * </div>\n *\n * @module providers/microsoft-entra-id\n */\n\n/**\n *\n * Add Microsoft Entra ID login to your page.\n *\n * ## Setup\n *\n * ### Callback URL\n * ```\n * https://example.com/auth/callback/microsoft-entra-id\n * ```\n *\n * ### Configuration\n *\n * @example\n *\n * ```ts\n * import MicrosoftEntraID from \"@auth/core/providers/microsoft-entra-id\"\n * ...\n * providers: [\n *   MicrosoftEntraID({\n *     clientId: env.AUTH_MICROSOFT_ENTRA_ID_ID,\n *     clientSecret: env.AUTH_MICROSOFT_ENTRA_ID_SECRET,\n *   }),\n * ]\n * ...\n * ```\n *\n * ### Resources\n *\n *  - [Microsoft Entra OAuth documentation](https://learn.microsoft.com/en-us/entra/identity-platform/v2-oauth2-auth-code-flow)\n *  - [Microsoft Entra OAuth apps](https://learn.microsoft.com/en-us/entra/identity-platform/quickstart-register-app)\n *\n * ### To allow specific Active Directory users access:\n *\n * By default, the Entra ID provider lets the users to log in with any Microsoft account (either Personal, School or Work).\n *\n * To only allow your organization's users to log in, you'll need to set the `issuer`, in addition to the client id and secret.\n *\n * @example\n * ```ts\n * import MicrosoftEntraID from \"@auth/core/providers/microsoft-entra-id\"\n *\n * providers: [\n *   MicrosoftEntraID({\n *     clientId: env.AUTH_MICROSOFT_ENTRA_ID_ID,\n *     clientSecret: env.AUTH_MICROSOFT_ENTRA_ID_SECRET,\n *     issuer: env.AUTH_MICROSOFT_ENTRA_ID_TENANT_ID,\n *   }),\n * ]\n * ```\n *\n * ### Notes\n *\n * Microsoft Entra ID returns the profile picture in an ArrayBuffer, instead of just a URL to the image, so our provider converts it to a base64 encoded image string and returns that instead. See: https://learn.microsoft.com/en-us/graph/api/profilephoto-get?view=graph-rest-1.0&tabs=http#examples. The default image size is 48x48 to avoid [running out of space](https://next-auth.js.org/faq#:~:text=What%20are%20the%20disadvantages%20of%20JSON%20Web%20Tokens%3F) in case the session is saved as a JWT.\n *\n * By default, Auth.js assumes that the Microsoft Entra ID provider is\n * based on the [Open ID Connect](https://openid.net/specs/openid-connect-core-1_0.html) specification.\n *\n * :::tip\n *\n * The Microsoft Entra ID provider comes with a [default configuration](https://github.com/nextauthjs/next-auth/blob/main/packages/core/src/providers/microsoft-entra-id.ts).\n * To override the defaults for your use case, check out [customizing a built-in OAuth provider](https://authjs.dev/guides/configuring-oauth-providers).\n *\n * :::\n *\n * :::info **Disclaimer**\n *\n * If you think you found a bug in the default configuration, you can [open an issue](https://authjs.dev/new/provider-issue).\n *\n * Auth.js strictly adheres to the specification and it cannot take responsibility for any deviation from\n * the spec by the provider. You can open an issue, but if the problem is non-compliance with the spec,\n * we might not pursue a resolution. You can ask for more help in [Discussions](https://authjs.dev/new/github-discussions).\n *\n * :::\n */\nfunction MicrosoftEntraID(config) {\n    const { profilePhotoSize = 48 } = config;\n    config.issuer ?? (config.issuer = \"https://login.microsoftonline.com/common/v2.0\");\n    return {\n        id: \"microsoft-entra-id\",\n        name: \"Microsoft Entra ID\",\n        type: \"oidc\",\n        authorization: { params: { scope: \"openid profile email User.Read\" } },\n        async profile(profile, tokens) {\n            // https://learn.microsoft.com/en-us/graph/api/profilephoto-get?view=graph-rest-1.0&tabs=http#examples\n            const response = await fetch(`https://graph.microsoft.com/v1.0/me/photos/${profilePhotoSize}x${profilePhotoSize}/$value`, { headers: { Authorization: `Bearer ${tokens.access_token}` } });\n            // Confirm that profile photo was returned\n            let image;\n            // TODO: Do this without Buffer\n            if (response.ok && typeof Buffer !== \"undefined\") {\n                try {\n                    const pictureBuffer = await response.arrayBuffer();\n                    const pictureBase64 = Buffer.from(pictureBuffer).toString(\"base64\");\n                    image = `data:image/jpeg;base64, ${pictureBase64}`;\n                }\n                catch { }\n            }\n            return {\n                id: profile.sub,\n                name: profile.name,\n                email: profile.email,\n                image: image ?? null,\n            };\n        },\n        style: { text: \"#fff\", bg: \"#0072c6\" },\n        /** Entra ID returns the wrong issuer @see https://github.com/MicrosoftDocs/azure-docs/issues/113944 */\n        async [_lib_symbols_js__WEBPACK_IMPORTED_MODULE_0__.customFetch](...args) {\n            const url = new URL(args[0] instanceof Request ? args[0].url : args[0]);\n            if (url.pathname.endsWith(\".well-known/openid-configuration\")) {\n                const response = await fetch(...args);\n                const json = await response.clone().json();\n                const tenantRe = /microsoftonline\\.com\\/(\\w+)\\/v2\\.0/;\n                const tenantId = config.issuer?.match(tenantRe)?.[1] ?? \"common\";\n                const issuer = json.issuer.replace(\"{tenantid}\", tenantId);\n                return Response.json({ ...json, issuer });\n            }\n            return fetch(...args);\n        },\n        [_lib_symbols_js__WEBPACK_IMPORTED_MODULE_0__.conformInternal]: true,\n        options: config,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/.pnpm/@auth+core@0.39.1/node_modules/@auth/core/providers/microsoft-entra-id.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/.pnpm/next-auth@5.0.0-beta.28_next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0__react@19.1.0/node_modules/next-auth/providers/apple.js":
/*!********************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next-auth@5.0.0-beta.28_next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0__react@19.1.0/node_modules/next-auth/providers/apple.js ***!
  \********************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _auth_core_providers_apple__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _auth_core_providers_apple__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core/providers/apple */ \"(middleware)/./node_modules/.pnpm/@auth+core@0.39.1/node_modules/@auth/core/providers/apple.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHQtYXV0aEA1LjAuMC1iZXRhLjI4X25leHRAMTUuMi40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjBfX3JlYWN0QDE5LjEuMC9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9hcHBsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQztBQUNVIiwic291cmNlcyI6WyIvVXNlcnMvYnJ1bm8vRG9jdW1lbnRzL3ppYmx5LWZyb250ZW5kL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0LWF1dGhANS4wLjAtYmV0YS4yOF9uZXh0QDE1LjIuNF9yZWFjdC1kb21AMTkuMS4wX3JlYWN0QDE5LjEuMF9fcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9wcm92aWRlcnMvYXBwbGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIkBhdXRoL2NvcmUvcHJvdmlkZXJzL2FwcGxlXCI7XG5leHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIkBhdXRoL2NvcmUvcHJvdmlkZXJzL2FwcGxlXCI7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/.pnpm/next-auth@5.0.0-beta.28_next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0__react@19.1.0/node_modules/next-auth/providers/apple.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/.pnpm/next-auth@5.0.0-beta.28_next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0__react@19.1.0/node_modules/next-auth/providers/google.js":
/*!*********************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next-auth@5.0.0-beta.28_next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0__react@19.1.0/node_modules/next-auth/providers/google.js ***!
  \*********************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _auth_core_providers_google__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _auth_core_providers_google__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core/providers/google */ \"(middleware)/./node_modules/.pnpm/@auth+core@0.39.1/node_modules/@auth/core/providers/google.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHQtYXV0aEA1LjAuMC1iZXRhLjI4X25leHRAMTUuMi40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjBfX3JlYWN0QDE5LjEuMC9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9nb29nbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEM7QUFDVSIsInNvdXJjZXMiOlsiL1VzZXJzL2JydW5vL0RvY3VtZW50cy96aWJseS1mcm9udGVuZC9ub2RlX21vZHVsZXMvLnBucG0vbmV4dC1hdXRoQDUuMC4wLWJldGEuMjhfbmV4dEAxNS4yLjRfcmVhY3QtZG9tQDE5LjEuMF9yZWFjdEAxOS4xLjBfX3JlYWN0QDE5LjEuMF9fcmVhY3RAMTkuMS4wL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvcHJvdmlkZXJzL2dvb2dsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiQGF1dGgvY29yZS9wcm92aWRlcnMvZ29vZ2xlXCI7XG5leHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIkBhdXRoL2NvcmUvcHJvdmlkZXJzL2dvb2dsZVwiO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/.pnpm/next-auth@5.0.0-beta.28_next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0__react@19.1.0/node_modules/next-auth/providers/google.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/.pnpm/next-auth@5.0.0-beta.28_next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0__react@19.1.0/node_modules/next-auth/providers/microsoft-entra-id.js":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next-auth@5.0.0-beta.28_next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0__react@19.1.0/node_modules/next-auth/providers/microsoft-entra-id.js ***!
  \*********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _auth_core_providers_microsoft_entra_id__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _auth_core_providers_microsoft_entra_id__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core/providers/microsoft-entra-id */ \"(middleware)/./node_modules/.pnpm/@auth+core@0.39.1/node_modules/@auth/core/providers/microsoft-entra-id.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHQtYXV0aEA1LjAuMC1iZXRhLjI4X25leHRAMTUuMi40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjBfX3JlYWN0QDE5LjEuMC9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9taWNyb3NvZnQtZW50cmEtaWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0Q7QUFDVSIsInNvdXJjZXMiOlsiL1VzZXJzL2JydW5vL0RvY3VtZW50cy96aWJseS1mcm9udGVuZC9ub2RlX21vZHVsZXMvLnBucG0vbmV4dC1hdXRoQDUuMC4wLWJldGEuMjhfbmV4dEAxNS4yLjRfcmVhY3QtZG9tQDE5LjEuMF9yZWFjdEAxOS4xLjBfX3JlYWN0QDE5LjEuMF9fcmVhY3RAMTkuMS4wL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvcHJvdmlkZXJzL21pY3Jvc29mdC1lbnRyYS1pZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiQGF1dGgvY29yZS9wcm92aWRlcnMvbWljcm9zb2Z0LWVudHJhLWlkXCI7XG5leHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIkBhdXRoL2NvcmUvcHJvdmlkZXJzL21pY3Jvc29mdC1lbnRyYS1pZFwiO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/.pnpm/next-auth@5.0.0-beta.28_next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0__react@19.1.0/node_modules/next-auth/providers/microsoft-entra-id.js\n");

/***/ })

});